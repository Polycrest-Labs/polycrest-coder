/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import { Image } from "@boundaryml/baml"

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}

export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export interface AskUser {
  tool_name: "ask_followup_question"
  message: string
  
}

export interface AttemptCompletion {
  tool_name: "attempt_compeletion"
  result: string
  command: string
  
}

export interface ListCodeDefinitionNames {
  tool_name: "list_code_definition_names"
  path: string
  
}

export interface ListFiles {
  tool_name: "list_files"
  path: string
  recursive: boolean
  
}

export interface ProjectEnvironment {
  osName: string
  cwd: string
  cwdFileList: string
  
}

export interface ReadFile {
  tool_name: "read_file"
  path: string
  
}

export interface Request {
  request: string
  file_list: string[]
  environment_details: ProjectEnvironment
  previous_tool_results: ToolRequestResponse[]
  
}

export interface Resume {
  name: string
  email: string
  experience: string[]
  skills: string[]
  
}

export interface SearchAndReplace {
  tool_name: "search_and_replace"
  path: string
  operations: SearchAndReplaceOperations[]
  
}

export interface SearchAndReplaceOperations {
  search: string
  replace: string
  start_line: number
  end_line: number
  use_regex: boolean
  regex_flags: string
  ignore_case: boolean
  
}

export interface ToolRequest {
  reason: string
  tool: ListFiles | ReadFile | AskUser | AttemptCompletion | WriteToFile | SearchAndReplace
  
}

export interface ToolRequestResponse {
  tool_request: ToolRequest
  response: string
  
}

export interface UserResponse {
  message_to_user: string
  
}

export interface WriteToFile {
  tool_name: "write_to_file"
  path: string
  content: string
  
}
